{"version":3,"file":"static/js/331.a7dfee6c.chunk.js","mappings":"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","sources":["components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/References.js","components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","data/resume/courses.js","data/resume/degrees.js","data/resume/ta.js","pages/Education.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data, title }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>{title}</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n  title: 'Experience',\n};\n\nexport default Experience;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year[0]} - {data.year[1]}</p>\n      <p>{data.description}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    description: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Selected Courses</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","const courses = [\n  {\n    title: 'Structured Programming',\n    number: '19/20',\n    link: 'https://yazd.ac.ir',\n    university: 'Yazd University',\n  },\n  {\n    title: 'Discrete Mathematics',\n    number: '20/20',\n    link: 'https://yazd.ac.ir',\n    university: 'Yazd University',\n  },\n  {\n    title: 'Object Oriented Programming',\n    number: '20/20',\n    link: 'https://yazd.ac.ir',\n    university: 'Yazd University',\n  },\n  {\n    title: 'Statistics',\n    number: '20/20',\n    link: 'https://yazd.ac.ir',\n    university: 'Yazd University',\n  },\n  {\n    title: 'Algorithms',\n    number: '19.3/20',\n    link: 'https://yazd.ac.ir',\n    university: 'Yazd University',\n  },\n  {\n    title: 'Data Structures',\n    number: '17.75/20',\n    link: 'https://yazd.ac.ir',\n    university: 'Yazd University',\n  },\n  {\n    title: 'Applied Mathematics',\n    number: '19/20',\n    link: 'https://yazd.ac.ir',\n    university: 'Yazd University',\n  },\n  {\n    title: 'Compiler',\n    number: '20/20',\n    link: 'https://en.sbu.ac.ir',\n    university: 'Shahid Beheshti University',\n  },\n  {\n    title: 'Introduction to Signal Processing',\n    number: '19.66/20',\n    link: 'https://en.sbu.ac.ir',\n    university: 'Shahid Beheshti University',\n  },\n  {\n    title: 'Artificial Intelligence',\n    number: '18.94/20',\n    link: 'https://en.sbu.ac.ir',\n    university: 'Shahid Beheshti University',\n  },\n  {\n    title: 'Web Engineering',\n    number: '20/20',\n    link: 'https://en.sbu.ac.ir',\n    university: 'Shahid Beheshti University',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'Yazd University',\n    degree: 'B.e. Computer Engineering',\n    link: 'https://yazd.ac.ir/en',\n    year: [2018, 2023],\n    description: 'Thesis: Intelligent Othello game agent trained by deep reinforcement learning',\n  },\n  {\n    school: 'Shahid Beheshti University',\n    degree: 'B.e. Computer Engineering',\n    link: 'https://en.sbu.ac.ir',\n    year: [2020, 2022],\n    description: 'Guest Student',\n  },\n  {\n    school: 'Emam High school',\n    degree: 'Diploma Mathematics',\n    link: '#',\n    year: [2014, 2018],\n    description: '',\n  },\n];\n\nexport default degrees;\n","const ta = [\n  {\n    company: 'Amirkabir University',\n    position: 'Teaching Assistant',\n    link: 'https://aut.ac.ir/en',\n    daterange: 'February 2022 - July 2022',\n    points: [\n      'Internet Engineering, Dr. Parham Alvani, Spring 2022',\n    ],\n  },\n  {\n    company: 'Shahid Beheshti University',\n    position: 'Teaching Assistant',\n    link: 'https://en.sbu.ac.ir',\n    daterange: 'February 2021 - July 2022',\n    points: [\n      'Advanced Programming, Dr. Sadegh Aliakbari, Spring 2021',\n      'Compiler, Professor Jaberi, Fall 2021',\n      'Compiler, Professor Jaberi, Spring 2022',\n    ],\n  },\n  {\n    company: 'Yazd University',\n    position: 'Teaching Assistant',\n    link: 'https://yazd.ac.ir/en',\n    daterange: 'February 2020 – July 2020',\n    points: [\n      'Advanced Programming Lecture, Dr. Zare Bidoki, Spring 2020',\n      'Electric Circuit Lecture, Dr. Sadr, Spring 2020',\n    ],\n  },\n];\n\nexport default ta;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\nimport Experience from '../components/Resume/Experience';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport ta from '../data/resume/ta';\n\nconst sections = [\n  'Education',\n  'References',\n];\n\nconst Educations = () => (\n  <Main\n    title=\"Education\"\n    description=\"Mehdi Teymorian's Education. Computer Engineering Undergraduate\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"education\">Education</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={ta} title=\"Academic Experience\" />\n      <Courses data={courses} />\n      <References />\n\n    </article>\n  </Main>\n);\n\nexport default Educations;\n"],"names":["data","className","href","link","company","position","daterange","points","map","point","Experience","title","id","job","defaultProps","to","degree","school","year","description","Education","Course","last","number","getRows","courses","sort","a","b","ret","university","course","idx","length","Courses","sections","Main","sec","toLowerCase","degrees","ta","References"],"sourceRoot":""}